<>バイトは一般的には8bitである。{{br}}歴史的な話をすると、CDCやBBNは8bitではなかった。{{br}}それぞれどう置いていたか


CDCは6bit、BBNは10bitを、1byteとしていた。
1byteとは結局何か


メモリアクセスにより読み出される一単位
ワードとは何か。現在何bitか


プロセッサの処理単位。32bit
整数表現は一般的に(ア)bitである。{{br}}符号付き整数を考えるとき、-xは、xを(イ)とすることで得られるか。


(ア):32{{br}}(イ):ビットを反転して1を足す{{br}}B=not(B)+1
4bit加算器で、(-5)+3を計算を行い、-2が表示されている例を図にせよ。{{br}}FAの内部構造は問わない。


![img/1.png](img/1.png)
符号付き整数(減基数を補数)を考えるとき、同じ絶対値で異符号のものに対し、ビットを反転させて1加えることで得る。{{br}}理由を説明せよ。


A-B=A+(-B)=A+B'とする。{{br}}このとき、A+A'を(2^n)-1とおいたり、2^nと置いたりして計算すれば説明がつく
単に反転したものを負数とする定義では、どんな問題が起こるか。


-8など、最小の負数が表現できず、また0を示すものが２つもあって、ダサい。
4bit加算器を改造し、4bit減算器に書き換えろ


Bの各ビット入力をそれぞれnotに通し、最下位のciに1を入力すればよい。
4bit加算器を改造し、スイッチSwを切り替えることで加算と減算を切り替えることのできる4bit加減算器を作りたい。(A±B){{br}}Bの任意のbitとSwを入力、Aと加算するbitを出力とする真理値表を示せ。{{br}}Swが0なら加算、1なら減算


出力は、減算ならnot(B)、加算ならBとなる。これはB xor Swそのものである。{{br}}(画像2.png){{br}}最下位のciにSwそのものを入力するのを忘れるな
4bit加減算器を示せ


()
符号なし演算を加減算器で行う。{{br}}(1)キャリーフラグはどこか。{{br}}(2)減算結果が負数になり、謝った演算をしていることを示すのは、キャリーフラグがどんなときか、求めよ。


(1)最上位Co{{br}}(2)A-B→A+(10000-B)=10000+A-B{{br}}したがって、A-Bが正なら10000より大きく、キャリーフラグが立つ。{{br}}負なら10000より小さく、キャリーフラグが立たない。{{br}}したがってキャリーフラグが立っていないとき、誤りがある。
キャリーフラグ付き4bit加減算器をかけ


()穴埋め15頁はすべてxorゲート。まあわかると思うが。
オーバーフローとは何か。


符号有り演算の結果、そのbit数で表される整数の範囲を超えてしまうこと
オーバーフローフラグを設計せよ。


()







